pipeline {
    agent any

    stages {
        stage('Install frontend dependencies') {
            steps {
                dir('piFrontEnd') {
                    sh 'npm install'
                }
            }
        }

        stage('Install backend dependencies') {
            steps {
                dir('piBackenEnd') {
                    sh 'npm install'
                }
            }
        }

        stage('Unit Test') {
            steps {
                parallel (
                    frontend: {
                        dir('piFrontEnd') {
                            sh 'npm test'
                        }
                    },
                    backend: {
                        dir('piBackenEnd') {
                            sh 'npm test'
                        }
                    }
                )
            }
        }

        stage('Build frontend') {
            steps {
                dir('piFrontEnd') {
                    sh 'npm run build-dev'
                }
            }
        }

        stage('Build backend') {
            steps {
                dir('piBackenEnd') {
                    sh 'npm run build-dev'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('piFrontEnd') {
                    def scannerHome = tool 'scanner'
                    withSonarQubeEnv {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        }
    }
}
